/*
 * ВВОД И ВЫВОД ДАННЫХ В C++
 * 
 * Этот файл демонстрирует:
 * - Различные потоки ввода-вывода (cout, cerr, clog, cin)
 * - Ввод данных от пользователя
 * - Работу с пробелами в строковых данных
 * - Функцию getline() для чтения строк с пробелами
 */

#include <iostream>  // Для потоков ввода-вывода
#include <string>    // Для работы со строками

int main(){
    /*
     * ПОТОКИ ВЫВОДА ДАННЫХ
     * 
     * В C++ есть три основных потока вывода:
     * 1. std::cout - стандартный поток вывода (консоль)
     * 2. std::cerr - поток вывода ошибок (не буферизуется)
     * 3. std::clog - поток вывода логов (буферизуется)
     */
    
    // Вывод данных в стандартный поток
    int age {21};
    std::cout << "Age : " << age << std::endl;

    // Вывод сообщения об ошибке (всегда выводится сразу)
    std::cerr << "Error message : Something is wrong" << std::endl;
    
    // Вывод лог-сообщения (может буферизоваться)
    std::clog << "Log message : Something happened " << std::endl; 

    /*
     * ВВОД ДАННЫХ ОТ ПОЛЬЗОВАТЕЛЯ
     * 
     * std::cin - стандартный поток ввода
     * Оператор >> (извлечения) читает данные из потока
     */
    
    // Объявляем переменные для хранения введенных данных
    int age1;
    std::string name;

    // Запрашиваем данные у пользователя
    std::cout << "Please type your name and age : " << std::endl;

    /*
     * СПОСОБЫ ВВОДА ДАННЫХ:
     * 
     * 1. Поэтапный ввод (закомментирован):
     *    std::cin >> name;   // Сначала имя
     *    std::cin >> age1;   // Потом возраст
     * 
     * 2. Цепочка ввода (используется):
     *    std::cin >> name >> age1;  // Имя и возраст в одной строке
     */
    
    // Вводим данные цепочкой (имя и возраст через пробел)
    std::cin >> name >> age1;

    // Выводим результат
    std::cout << "Hello " << name << " you are " << age1 << " years old!" << std::endl;

    /*
     * РАБОТА С ПРОБЕЛАМИ В СТРОКАХ
     * 
     * Проблема: оператор >> останавливается на первом пробеле
     * Решение: использовать std::getline() для чтения полной строки
     */
    
    std::string full_name;
    int age3;

    std::cout << "Please type in your full name and age " << std::endl;

    /*
     * ВАЖНО: std::cin.ignore()
     * 
     * После предыдущего ввода в буфере остается символ '\n' (новая строка)
     * std::cin.ignore() очищает буфер от этого символа
     * Без этого getline() сразу прочитает пустую строку
     */
    std::cin.ignore(); // Очищаем буфер от символа новой строки
    
    // Читаем полное имя (включая пробелы) до символа новой строки
    std::getline(std::cin, full_name);

    // Читаем возраст
    std::cin >> age3;

    // Выводим результат с полным именем
    std::cout << "Hello " << full_name 
            << " you are " << age3 << " years old!" << std::endl;

    return 0;
}

/*
 * КЛЮЧЕВЫЕ ПОНЯТИЯ:
 * 
 * 1. ПОТОКИ ВВОДА-ВЫВОДА:
 *    - std::cout - стандартный вывод (буферизуется)
 *    - std::cerr - вывод ошибок (не буферизуется, всегда сразу)
 *    - std::clog - вывод логов (буферизуется)
 *    - std::cin  - стандартный ввод
 * 
 * 2. ОПЕРАТОРЫ ПОТОКОВ:
 *    - << (вставка) - для вывода данных
 *    - >> (извлечение) - для ввода данных
 * 
 * 3. ПРОБЛЕМА С ПРОБЕЛАМИ:
 *    - std::cin >> останавливается на пробеле
 *    - std::getline() читает всю строку до '\n'
 * 
 * 4. БУФЕРИЗАЦИЯ:
 *    - std::cin.ignore() очищает буфер от лишних символов
 *    - Необходимо после std::cin >> перед std::getline()
 * 
 * 5. ПРАКТИЧЕСКИЕ СОВЕТЫ:
 *    - Используйте getline() для строк с пробелами
 *    - Не забывайте ignore() после cin >> перед getline()
 *    - cerr для ошибок, cout для обычного вывода
 */